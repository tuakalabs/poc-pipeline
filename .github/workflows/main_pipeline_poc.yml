name: Main Pipeline POC

on:
  pull_request:
    branches:
      - main
    paths:
      - "backend/Services/**"

jobs:
  setup:
    name: "Setup Pipeline"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: "5.x"

      - name: Calculate new version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1.1.1
        with:
          useConfigFile: true

      - name: Display version
        run: echo ${{ steps.gitversion.outputs.semVer }}

  detect-changes:
    name: Detecting Changes
    needs: setup
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-changed-services.outputs.services }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Filter changed files
        id: filter
        uses: dorny/paths-filter@v3
        with:
          list-files: json
          filters: |
            services:
              - 'backend/Services/**'

      - name: Display changed files JSON
        run: echo ${{ steps.filter.outputs.services_files }}

      - name: Set changed services output
        id: set-changed-services
        run: |
          changed_files='${{ steps.filter.outputs.services_files }}'

          if [ -n "$changed_files" ] && [ "$changed_files" != "null" ]; then
            # Extract unique service names using jq (handling spaces)
            changed_services=$(echo "$changed_files" | jq -r '.[] | split("/")[2]' | sort -u | jq -R -s -c 'split("\n")[:-1]')
          fi

          echo "Changed services: $changed_services"
          # echo "services=$changed_services" >> $GITHUB_ENV
          echo "::set-output name=services::$changed_services"

  build-images:
    name: Build Docker Images
    if: ${{ contains(github.event.pull_request.labels.*.name, 'submit') && needs.detect-changes.outputs.services != '[]' }}
    needs: detect-changes
    uses: ./.github/workflows/container_build_pipeline_poc.yml
    with:
      services: ${{ needs.detect-changes.outputs.services }}

  deploy-single-service:
    name: Deploy Single Service
    if: ${{ contains(github.event.pull_request.labels.*.name, 'deploy') }}
    needs: detect-changes
    uses: ./.github/workflows/single_build_deploy_pipeline_poc.yml
    with:
      services: ${{ needs.detect-changes.outputs.services }}
