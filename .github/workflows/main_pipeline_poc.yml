name: Main Pipeline POC

on:
  pull_request:
    branches:
      - main
    paths:
      - "backend/Services/**"

jobs:
  setup:
    name: "Setup Pipeline"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Git Setup
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESSTOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: "5.x"

      - name: Calculate new version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1.1.1
        with:
          useConfigFile: true

      - name: Display version
        run: echo ${{ steps.gitversion.outputs.semVer }}

  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.filter.outputs.services }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Filter changed files
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            services:
              - 'backend/Services/**'

      - name: Set changed services output
        id: set-changed-services
        run: |
          # Extract the list of unique service directories that have changes
          changed_services=$(echo "${{ steps.filter.outputs.services }}" | grep -oP 'backend/Services/[^/]+/' | sort -u)
          echo "Changed services: $changed_services"
          echo "::set-output name=services::$(echo $changed_services | jq -R -s -c 'split("\n")[:-1]')"
